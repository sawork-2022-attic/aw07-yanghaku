openapi: "3.0.0"
info:
  version: 1.0.0
  title: Order
  license:
    name: MIT
paths:
  /order/all:
    get:
      summary: Get all orders
      operationId: AllOrders
      tags:
        - order
      responses:
        '200':
          description: Get all orders
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Orders"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /order/new:
    post:
      summary: submit a new order
      operationId: AddOrder
      tags:
        - order
      requestBody:
        description: create a new order from current cart
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cart"
      responses:
        '200':
          description: return the new order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /order/{orderId}:
    get:
      summary: get a special order
      operationId: GetOrderById
      tags:
        - order
      parameters:
        - name: orderId
          in: path
          description: order id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: return the order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      summary: deliver a order
      operationId: deliverOrderById
      tags:
        - order
      parameters:
        - name: orderId
          in: path
          description: Product ID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: return the order
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    Item:
      type: object
      required:
        - productId
        - quantity
      properties:
        productId:
          type: string
        quantity:
          type: number

    Cart:
      type: array
      items:
        $ref: "#/components/schemas/Item"

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Success:
      type: boolean

    Order:
      type: object
      required:
        - id
        - items
      properties:
        id:
          type: integer
        items:
          type: array
          items:
            $ref: "#/components/schemas/Item"

    Orders:
      type: array
      items:
        $ref: "#/components/schemas/Order"
